{
  "menu": {
    "file": "File",
    "edit": "Edit",
    "format": "Format",
    "insert": "Insert",
    "view": "View",
    "git": "Git",
    "help": "Help",
    "new": "New File",
    "open": "Open File",
    "save": "Save",
    "saveAs": "Save As",
    "export": "Export",
    "exportPdf": "Export as PDF",
    "exportOther": "Export to Other Formats...",
    "quit": "Quit",
    "undo": "Undo",
    "redo": "Redo",
    "cut": "Cut",
    "copy": "Copy",
    "paste": "Paste",
    "selectAll": "Select All",
    "searchReplace": "Find and Replace",
    "bold": "Bold",
    "italic": "Italic",
    "strikethrough": "Strikethrough",
    "inlineCode": "Inline Code",
    "clearFormat": "Clear Format",
    "heading": "Heading",
    "heading1": "Heading 1",
    "heading2": "Heading 2",
    "heading3": "Heading 3",
    "heading4": "Heading 4",
    "heading5": "Heading 5",
    "heading6": "Heading 6",
    "link": "Link",
    "image": "Image",
    "table": "Table",
    "horizontalRule": "Horizontal Rule",
    "codeBlock": "Code Block",
    "toc": "Generate Table of Contents",
    "mode": "Mode",
    "wysiwyg": "WYSIWYG",
    "source": "Source",
    "theme": "Theme",
    "light": "Light",
    "dark": "Dark",
    "devTools": "Developer Tools",
    "gitPanel": "Show Git Panel",
    "gitInit": "Initialize Repository",
    "gitOpen": "Open Repository",
    "gitStageAll": "Stage All Changes",
    "gitCommit": "Commit",
    "gitPush": "Push",
    "gitPull": "Pull",
    "gitBranch": "Branch",
    "gitNewBranch": "Create New Branch",
    "gitSwitchBranch": "Switch Branch",
    "gitRemoteSettings": "Remote Settings",
    "gitUserSettings": "User Settings",
    "gitHistory": "Commit History",
    "showHelp": "Show Help",
    "about": "About",
    "checkUpdates": "Check for Updates",
    "language": "Language",
    "japanese": "日本語",
    "english": "English"
  },
  "dialog": {
    "confirmSave": "Do you want to save the current changes?",
    "confirmStageAll": "Do you want to stage all changes?\n\nThis will make all modified files ready for commit.",
    "confirmPush": "Do you want to push to the remote repository?",
    "confirmPull": "Do you want to pull from the remote repository?\n\nThis will fetch and merge the latest changes from remote.",
    "confirmRemoveAccount": "Do you want to remove the following account?\n\n{{displayName}}",
    "inputUrl": "Enter URL:",
    "inputImageUrl": "Enter image URL:",
    "inputFootnoteNumber": "Enter footnote number:",
    "inputHtmlCode": "Enter HTML code:",
    "inputRemoteUrl": "Enter remote repository URL:",
    "inputBranchName": "Enter branch name:",
    "inputCommitMessage": "Enter commit message:",
    "tableRows": "Rows:",
    "tableCols": "Columns:",
    "tableWithHeader": "Include header row"
  },
  "message": {
    "newFileCreated": "New file created",
    "fileOpened": "File opened: {{fileName}}",
    "fileSaved": "File saved",
    "fileSavedAs": "File saved: {{fileName}}",
    "pdfExported": "PDF exported successfully",
    "copied": "Copied",
    "cut": "Cut",
    "pasted": "Pasted",
    "copyFailed": "Copy failed",
    "cutFailed": "Cut failed",
    "pasteFailed": "Paste failed",
    "gitInitialized": "Git repository initialized",
    "gitStageAllSuccess": "Staged {{count}} files",
    "gitStageFileSuccess": "File staged successfully",
    "gitUnstageFileSuccess": "File unstaged successfully",
    "gitCommitSuccess": "Commit created successfully",
    "gitPushSuccess": "Pushed '{{branch}}' branch to '{{remote}}' ({{count}} commits)",
    "gitPullSuccess": "Pulled '{{branch}}' branch from '{{remote}}'",
    "gitBranchCreated": "Branch '{{branch}}' created and switched to",
    "gitBranchSwitched": "Switched to branch '{{branch}}'",
    "gitRemoteAdded": "Remote '{{remote}}' added",
    "gitUserConfigSaved": "Git {{scope}} configuration saved",
    "noChangesToStage": "No changes to stage",
    "noChangesToCommit": "No changes to commit",
    "noCommitsToPush": "No commits to push. Please create a commit first.",
    "noRemoteConfigured": "No remote repository configured. Please set up remote first.",
    "languageChanged": "Language changed to {{language}}. App restart required."
  },
  "error": {
    "gitNotAvailable": "Git is not installed or not in PATH",
    "gitNotInitialized": "Git repository is not initialized",
    "gitUserConfigRequired": "Git user information is not configured",
    "gitAuthRequired": "Authentication required. Please configure GitHub or other credentials.",
    "gitPushRejected": "Push was rejected. Please pull first and then push again.",
    "gitRemoteNotFound": "Remote repository not found. Please check remote configuration.",
    "gitMergeConflict": "Merge conflict occurred. Please resolve manually.",
    "fileOpenFailed": "Failed to open file: {{error}}",
    "fileSaveFailed": "Failed to save file",
    "pdfExportFailed": "Failed to export PDF",
    "invalidPath": "Invalid file path",
    "invalidUrl": "Please enter a valid Git repository URL",
    "electronRequired": "This feature is only available in the Electron app",
    "nameEmailRequired": "Name and email are required",
    "branchNameRequired": "Please enter a branch name",
    "invalidBranchName": "Branch name contains invalid characters (space, ~, ^, :, ?, *, [, ], \\)",
    "branchAlreadyExists": "Branch '{{branch}}' already exists",
    "branchNotFound": "Branch '{{branch}}' not found",
    "cannotDeleteCurrentBranch": "Cannot delete the currently active branch. Please switch to another branch first.",
    "cannotDeleteMainBranch": "Cannot delete the main branch (main/master).",
    "hasUnstagedChanges": "You have uncommitted changes. Please commit or stage them first"
  },
  "git": {
    "notAvailable": "Git Not Available",
    "notAvailableMessage": "Git is not installed or not in PATH.",
    "installGit": "Install Git",
    "noRepository": "No Repository Found",
    "noRepositoryMessage": "The current folder is not a Git repository.",
    "initializeHere": "Initialize Here",
    "selectFolder": "Select Folder",
    "quickSettings": "Quick Settings",
    "gettingStarted": "Getting Started",
    "userConfig": "User Configuration",
    "repositoryInfo": "Repository Information",
    "repositoryName": "Repository:",
    "currentBranch": "Current Branch:",
    "remoteUrl": "Remote URL:",
    "syncStatus": "Sync Status:",
    "ahead": "ahead",
    "behind": "behind",
    "synced": "synced",
    "changes": "Changes",
    "noChanges": "No changes",
    "stageAll": "Stage All",
    "refreshStatus": "Refresh Status",
    "commits": "Commits",
    "branches": "Branches",
    "remotes": "Remotes",
    "userSettings": "User Settings",
    "existingAccounts": "Existing Accounts",
    "addNewAccount": "Add New Account",
    "userName": "User Name:",
    "userEmail": "Email:",
    "configScope": "Configuration Scope:",
    "globalConfig": "Global",
    "localConfig": "Local",
    "saveConfig": "Save Configuration",
    "cancel": "Cancel",
    "remoteSetup": "Remote Setup",
    "remoteUrlPlaceholder": "https://github.com/username/repository.git",
    "ok": "OK",
    "back": "Back",
    "close": "Close",
    "added": "added",
    "modified": "modified",
    "deleted": "deleted",
    "renamed": "renamed",
    "untracked": "untracked"
  },
  "editor": {
    "placeholder": "Start typing here...",
    "welcome": "Welcome to SightEdit!",
    "welcomeMessage": "A new TipTap-based editor."
  },
  "status": {
    "saved": "Saved",
    "editing": "Editing",
    "untitled": "Untitled Document"
  },
  "update": {
    "checking": "Checking for updates...",
    "available": "Update available",
    "downloading": "Downloading update...",
    "downloaded": "Update download completed",
    "notAvailable": "You are using the latest version",
    "error": "Failed to check for updates",
    "devMode": "Auto-update is disabled in development mode.",
    "downloadNow": "Download Now",
    "later": "Later",
    "seeDetails": "See Details",
    "restartNow": "Restart Now",
    "restartLater": "Restart Later",
    "currentVersion": "Current version: v{{version}}",
    "newVersion": "New version: v{{version}}",
    "restartRequired": "Restart required to apply update.",
    "filesWillBeSaved": "Open files will be saved."
  }
}