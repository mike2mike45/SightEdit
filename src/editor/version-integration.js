/**
 * „Éê„Éº„Ç∏„Éß„É≥ÁÆ°ÁêÜÊ©üËÉΩÁµ±Âêà
 * SimpleMarkdownEditor„Å´„Éê„Éº„Ç∏„Éß„É≥Â±•Ê≠¥Ê©üËÉΩ„ÇíËøΩÂä†
 */

import { VersionPanel } from './version-panel.js';
import { getVersionManager } from '../lib/version-manager.js';

export class VersionIntegration {
    constructor(editor) {
        this.editor = editor;
        this.versionManager = getVersionManager();
        this.versionPanel = null;
        this.autoSaveInterval = null;
        this.autoSaveEnabled = false;
        this.autoSaveIntervalSeconds = 300; // 5ÂàÜ
        this.lastSavedContent = '';
    }

    /**
     * „Éê„Éº„Ç∏„Éß„É≥ÁÆ°ÁêÜÊ©üËÉΩ„ÇíÂàùÊúüÂåñ
     */
    async init() {
        try {
            // „Éê„Éº„Ç∏„Éß„É≥„Éû„Éç„Éº„Ç∏„É£„Éº„ÅåÂà©Áî®ÂèØËÉΩ„Åã„ÉÅ„Çß„ÉÉ„ÇØ
            const available = await this.versionManager.checkAvailability();

            if (!available) {
                console.log('„Éê„Éº„Ç∏„Éß„É≥Â±•Ê≠¥Ê©üËÉΩ„ÅØÂà©Áî®„Åß„Åç„Åæ„Åõ„Çì');
                return;
            }

            // „Éê„Éº„Ç∏„Éß„É≥„Éë„Éç„É´„Çí‰ΩúÊàê
            const container = document.body;
            this.versionPanel = new VersionPanel(container);
            this.versionPanel.initialize();

            // Âæ©ÂÖÉÊôÇ„ÅÆ„Ç≥„Éº„É´„Éê„ÉÉ„ÇØË®≠ÂÆö
            this.versionPanel.onRestore((content) => {
                this.restoreContent(content);
            });

            // „ÉÑ„Éº„É´„Éê„Éº„Å´„Éú„Çø„É≥„ÇíËøΩÂä†
            this.addVersionButton();

            // Ëá™Âãï‰øùÂ≠ò„ÇíË®≠ÂÆö
            this.setupAutoSave();

            console.log('„Éê„Éº„Ç∏„Éß„É≥ÁÆ°ÁêÜÊ©üËÉΩ„ÅÆÂàùÊúüÂåñÂÆå‰∫Ü');
        } catch (error) {
            console.error('„Éê„Éº„Ç∏„Éß„É≥ÁÆ°ÁêÜÊ©üËÉΩ„ÅÆÂàùÊúüÂåñ„Ç®„É©„Éº:', error);
        }
    }

    /**
     * „ÉÑ„Éº„É´„Éê„Éº„Å´„Éê„Éº„Ç∏„Éß„É≥Â±•Ê≠¥„Éú„Çø„É≥„ÇíËøΩÂä†
     */
    addVersionButton() {
        const toolbar = document.querySelector('.toolbar');
        if (!toolbar) return;

        // „Éê„Éº„Ç∏„Éß„É≥Â±•Ê≠¥„Éú„Çø„É≥„Çí‰ΩúÊàê
        const versionButton = document.createElement('button');
        versionButton.className = 'toolbar-btn';
        versionButton.title = '„Éê„Éº„Ç∏„Éß„É≥Â±•Ê≠¥';
        versionButton.innerHTML = 'üìã';
        versionButton.addEventListener('click', () => {
            this.toggleVersionPanel();
        });

        // „ÉÑ„Éº„É´„Éê„Éº„ÅÆÂè≥ÂÅ¥„Å´ËøΩÂä†
        const rightSection = toolbar.querySelector('.toolbar-right') || toolbar;
        rightSection.appendChild(versionButton);
    }

    /**
     * „Éê„Éº„Ç∏„Éß„É≥„Éë„Éç„É´„Çí„Éà„Ç∞„É´
     */
    toggleVersionPanel() {
        if (this.versionPanel) {
            this.versionPanel.toggle();
        }
    }

    /**
     * ÁèæÂú®„ÅÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Çí„Éê„Éº„Ç∏„Éß„É≥„Å®„Åó„Å¶‰øùÂ≠ò
     */
    async saveVersion(message = '') {
        try {
            const content = this.editor.getMarkdownContent();

            // „Éï„Ç°„Ç§„É´„Éë„Çπ„ÇíË®≠ÂÆöÔºàÁèæÂú®„ÅÆ„Éï„Ç°„Ç§„É´Âêç„Åã„ÇâÂèñÂæóÔºâ
            if (this.editor.currentFileName) {
                this.versionManager.setFilePath(this.editor.currentFileName);
            }

            // „Éê„Éº„Ç∏„Éß„É≥„Çí‰øùÂ≠ò
            const result = await this.versionManager.saveVersion(content, message);

            // „Éê„Éº„Ç∏„Éß„É≥„Éë„Éç„É´„ÇíÊõ¥Êñ∞
            if (this.versionPanel && this.versionPanel.isOpen) {
                await this.versionPanel.loadVersions();
            }

            // ÊúÄÂæå„Å´‰øùÂ≠ò„Åó„ÅüÂÜÖÂÆπ„ÇíË®òÈå≤
            this.lastSavedContent = content;

            console.log('„Éê„Éº„Ç∏„Éß„É≥‰øùÂ≠òÊàêÂäü:', result.version_id);
            return result;
        } catch (error) {
            console.error('„Éê„Éº„Ç∏„Éß„É≥‰øùÂ≠ò„Ç®„É©„Éº:', error);
            throw error;
        }
    }

    /**
     * „Éê„Éº„Ç∏„Éß„É≥„ÇíÂæ©ÂÖÉ
     */
    restoreContent(content) {
        // „Ç®„Éá„Ç£„Çø„ÅÆÂÜÖÂÆπ„ÇíÊõ¥Êñ∞
        const editorContent = document.getElementById('wysiwyg-content');
        if (editorContent) {
            // Markdown ‚Üí HTML„Å´Â§âÊèõ„Åó„Å¶„Ç®„Éá„Ç£„Çø„Å´Ë®≠ÂÆö
            const html = this.editor.markdownToHtml(content);
            editorContent.innerHTML = html;

            // „ÉØ„Éº„Éâ„Ç´„Ç¶„É≥„Éà„ÇíÊõ¥Êñ∞
            this.editor.updateWordCount();

            console.log('„Éê„Éº„Ç∏„Éß„É≥„ÇíÂæ©ÂÖÉ„Åó„Åæ„Åó„Åü');
        }
    }

    /**
     * Ëá™Âãï‰øùÂ≠ò„ÇíË®≠ÂÆö
     */
    setupAutoSave() {
        // Ëá™Âãï‰øùÂ≠ò„ÅÆÊúâÂäπ/ÁÑ°Âäπ„Çí„ÉÅ„Çß„ÉÉ„ÇØ
        chrome.storage.local.get(['autoSaveEnabled', 'autoSaveInterval'], (result) => {
            this.autoSaveEnabled = result.autoSaveEnabled !== false; // „Éá„Éï„Ç©„É´„Éàtrue
            this.autoSaveIntervalSeconds = result.autoSaveInterval || 300;

            if (this.autoSaveEnabled) {
                this.startAutoSave();
            }
        });
    }

    /**
     * Ëá™Âãï‰øùÂ≠ò„ÇíÈñãÂßã
     */
    startAutoSave() {
        // Êó¢Â≠ò„ÅÆ„Çø„Ç§„Éû„Éº„Çí„ÇØ„É™„Ç¢
        if (this.autoSaveInterval) {
            clearInterval(this.autoSaveInterval);
        }

        // Êñ∞„Åó„ÅÑ„Çø„Ç§„Éû„Éº„ÇíË®≠ÂÆö
        this.autoSaveInterval = setInterval(() => {
            this.performAutoSave();
        }, this.autoSaveIntervalSeconds * 1000);

        console.log(`Ëá™Âãï‰øùÂ≠ò„ÇíÈñãÂßãÔºà${this.autoSaveIntervalSeconds}ÁßíÈñìÈöîÔºâ`);
    }

    /**
     * Ëá™Âãï‰øùÂ≠ò„ÇíÂÅúÊ≠¢
     */
    stopAutoSave() {
        if (this.autoSaveInterval) {
            clearInterval(this.autoSaveInterval);
            this.autoSaveInterval = null;
            console.log('Ëá™Âãï‰øùÂ≠ò„ÇíÂÅúÊ≠¢');
        }
    }

    /**
     * Ëá™Âãï‰øùÂ≠ò„ÇíÂÆüË°å
     */
    async performAutoSave() {
        try {
            const currentContent = this.editor.getMarkdownContent();

            // ÂÜÖÂÆπ„ÅåÂ§âÊõ¥„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÂ†¥Âêà„ÅØ„Çπ„Ç≠„ÉÉ„Éó
            if (currentContent === this.lastSavedContent) {
                console.log('Ëá™Âãï‰øùÂ≠ò„Çπ„Ç≠„ÉÉ„ÉóÔºàÂ§âÊõ¥„Å™„ÅóÔºâ');
                return;
            }

            // ÂÜÖÂÆπ„ÅåÁ©∫„ÅÆÂ†¥Âêà„ÅØ„Çπ„Ç≠„ÉÉ„Éó
            if (!currentContent || currentContent.trim().length === 0) {
                console.log('Ëá™Âãï‰øùÂ≠ò„Çπ„Ç≠„ÉÉ„ÉóÔºàÁ©∫„ÅÆÂÜÖÂÆπÔºâ');
                return;
            }

            // „Éê„Éº„Ç∏„Éß„É≥„Çí‰øùÂ≠ò
            await this.saveVersion('Ëá™Âãï‰øùÂ≠ò');
            console.log('Ëá™Âãï‰øùÂ≠òÂÆå‰∫Ü');

            // ÈÄöÁü•„ÇíË°®Á§∫Ôºà„Ç™„Éó„Ç∑„Éß„É≥Ôºâ
            this.showSaveNotification('Ëá™Âãï‰øùÂ≠ò„Åó„Åæ„Åó„Åü');
        } catch (error) {
            console.error('Ëá™Âãï‰øùÂ≠ò„Ç®„É©„Éº:', error);
        }
    }

    /**
     * ‰øùÂ≠òÈÄöÁü•„ÇíË°®Á§∫
     */
    showSaveNotification(message) {
        // Êó¢Â≠ò„ÅÆÈÄöÁü•„ÇíÂâäÈô§
        const existingNotification = document.querySelector('.save-notification');
        if (existingNotification) {
            existingNotification.remove();
        }

        // ÈÄöÁü•„Çí‰ΩúÊàê
        const notification = document.createElement('div');
        notification.className = 'save-notification';
        notification.textContent = message;
        notification.style.cssText = `
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: #4caf50;
            color: white;
            padding: 12px 20px;
            border-radius: 4px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.2);
            z-index: 10000;
            animation: slideIn 0.3s ease;
        `;

        document.body.appendChild(notification);

        // 3ÁßíÂæå„Å´ÂâäÈô§
        setTimeout(() => {
            notification.style.animation = 'slideOut 0.3s ease';
            setTimeout(() => notification.remove(), 300);
        }, 3000);
    }

    /**
     * „Éê„Éº„Ç∏„Éß„É≥‰øùÂ≠ò„ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÇíË°®Á§∫
     */
    async showSaveDialog() {
        return new Promise((resolve) => {
            // „ÉÄ„Ç§„Ç¢„É≠„Ç∞„Çí‰ΩúÊàê
            const dialog = document.createElement('div');
            dialog.className = 'version-save-dialog';
            dialog.innerHTML = `
                <div class="dialog-overlay"></div>
                <div class="dialog-content">
                    <h3>„Éê„Éº„Ç∏„Éß„É≥„Çí‰øùÂ≠ò</h3>
                    <p>„Åì„ÅÆ„Éê„Éº„Ç∏„Éß„É≥„Å´Ë™¨Êòé„Çí„Å§„Åë„Åæ„Åô„ÅãÔºü</p>
                    <textarea
                        id="version-message"
                        placeholder="‰æã: Â∞éÂÖ•ÈÉ®ÂàÜ„Çí„É™„É©„Ç§„Éà"
                        rows="3"
                        style="width: 100%; padding: 8px; margin: 12px 0; border: 1px solid #ddd; border-radius: 4px;"
                    ></textarea>
                    <div class="dialog-buttons">
                        <button id="save-cancel-btn" class="btn btn-secondary">„Ç≠„É£„É≥„Çª„É´</button>
                        <button id="save-confirm-btn" class="btn btn-primary">‰øùÂ≠ò</button>
                    </div>
                </div>
            `;

            // „Çπ„Çø„Ç§„É´„ÇíËøΩÂä†
            const style = document.createElement('style');
            style.textContent = `
                .version-save-dialog .dialog-overlay {
                    position: fixed;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    background: rgba(0,0,0,0.5);
                    z-index: 9998;
                }
                .version-save-dialog .dialog-content {
                    position: fixed;
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                    background: white;
                    padding: 24px;
                    border-radius: 8px;
                    box-shadow: 0 4px 16px rgba(0,0,0,0.2);
                    z-index: 9999;
                    min-width: 400px;
                }
                .version-save-dialog h3 {
                    margin: 0 0 16px 0;
                    font-size: 20px;
                    color: #333;
                }
                .version-save-dialog p {
                    margin: 0 0 8px 0;
                    color: #666;
                }
                .version-save-dialog .dialog-buttons {
                    display: flex;
                    justify-content: flex-end;
                    gap: 8px;
                    margin-top: 16px;
                }
                .version-save-dialog .btn {
                    padding: 8px 16px;
                    border: none;
                    border-radius: 4px;
                    cursor: pointer;
                    font-size: 14px;
                }
                .version-save-dialog .btn-primary {
                    background: #2196f3;
                    color: white;
                }
                .version-save-dialog .btn-secondary {
                    background: #e0e0e0;
                    color: #333;
                }
                @keyframes slideIn {
                    from { transform: translateY(20px); opacity: 0; }
                    to { transform: translateY(0); opacity: 1; }
                }
                @keyframes slideOut {
                    from { transform: translateY(0); opacity: 1; }
                    to { transform: translateY(20px); opacity: 0; }
                }
            `;
            document.head.appendChild(style);

            document.body.appendChild(dialog);

            // „Ç§„Éô„É≥„Éà„É™„Çπ„Éä„Éº„ÇíË®≠ÂÆö
            const messageInput = document.getElementById('version-message');
            const cancelBtn = document.getElementById('save-cancel-btn');
            const confirmBtn = document.getElementById('save-confirm-btn');

            messageInput.focus();

            cancelBtn.addEventListener('click', () => {
                dialog.remove();
                style.remove();
                resolve(null);
            });

            confirmBtn.addEventListener('click', async () => {
                const message = messageInput.value.trim();
                dialog.remove();
                style.remove();

                try {
                    const result = await this.saveVersion(message);
                    this.showSaveNotification('„Éê„Éº„Ç∏„Éß„É≥„Çí‰øùÂ≠ò„Åó„Åæ„Åó„Åü');
                    resolve(result);
                } catch (error) {
                    alert(`„Ç®„É©„Éº: ${error.message}`);
                    resolve(null);
                }
            });

            // „Ç™„Éº„Éê„Éº„É¨„Ç§„ÇØ„É™„ÉÉ„ÇØ„ÅßÈñâ„Åò„Çã
            dialog.querySelector('.dialog-overlay').addEventListener('click', () => {
                dialog.remove();
                style.remove();
                resolve(null);
            });
        });
    }

    /**
     * „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó
     */
    cleanup() {
        this.stopAutoSave();
    }
}
